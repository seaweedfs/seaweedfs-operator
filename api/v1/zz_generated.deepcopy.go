//go:build !ignore_autogenerated

/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCredentialsSecretRef) DeepCopyInto(out *AWSCredentialsSecretRef) {
	*out = *in
	out.Mapping = in.Mapping
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCredentialsSecretRef.
func (in *AWSCredentialsSecretRef) DeepCopy() *AWSCredentialsSecretRef {
	if in == nil {
		return nil
	}
	out := new(AWSCredentialsSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCredentialsSecretRefMapping) DeepCopyInto(out *AWSCredentialsSecretRefMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCredentialsSecretRefMapping.
func (in *AWSCredentialsSecretRefMapping) DeepCopy() *AWSCredentialsSecretRefMapping {
	if in == nil {
		return nil
	}
	out := new(AWSCredentialsSecretRefMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminCertificateSecretRef) DeepCopyInto(out *AdminCertificateSecretRef) {
	*out = *in
	out.Mapping = in.Mapping
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminCertificateSecretRef.
func (in *AdminCertificateSecretRef) DeepCopy() *AdminCertificateSecretRef {
	if in == nil {
		return nil
	}
	out := new(AdminCertificateSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminCertificateSecretRefMapping) DeepCopyInto(out *AdminCertificateSecretRefMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminCertificateSecretRefMapping.
func (in *AdminCertificateSecretRefMapping) DeepCopy() *AdminCertificateSecretRefMapping {
	if in == nil {
		return nil
	}
	out := new(AdminCertificateSecretRefMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminPasswordSecretRef) DeepCopyInto(out *AdminPasswordSecretRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminPasswordSecretRef.
func (in *AdminPasswordSecretRef) DeepCopy() *AdminPasswordSecretRef {
	if in == nil {
		return nil
	}
	out := new(AdminPasswordSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminSpec) DeepCopyInto(out *AdminSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.AdminPasswordSecretRef != nil {
		in, out := &in.AdminPasswordSecretRef, &out.AdminPasswordSecretRef
		*out = new(AdminPasswordSecretRef)
		**out = **in
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(PersistenceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = new(AdminTLSSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminSpec.
func (in *AdminSpec) DeepCopy() *AdminSpec {
	if in == nil {
		return nil
	}
	out := new(AdminSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdminTLSSpec) DeepCopyInto(out *AdminTLSSpec) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(AdminCertificateSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdminTLSSpec.
func (in *AdminTLSSpec) DeepCopy() *AdminTLSSpec {
	if in == nil {
		return nil
	}
	out := new(AdminTLSSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCredentialsSecretRef) DeepCopyInto(out *AzureCredentialsSecretRef) {
	*out = *in
	out.Mapping = in.Mapping
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCredentialsSecretRef.
func (in *AzureCredentialsSecretRef) DeepCopy() *AzureCredentialsSecretRef {
	if in == nil {
		return nil
	}
	out := new(AzureCredentialsSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCredentialsSecretRefMapping) DeepCopyInto(out *AzureCredentialsSecretRefMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCredentialsSecretRefMapping.
func (in *AzureCredentialsSecretRefMapping) DeepCopy() *AzureCredentialsSecretRefMapping {
	if in == nil {
		return nil
	}
	out := new(AzureCredentialsSecretRefMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureSinkConfig) DeepCopyInto(out *AzureSinkConfig) {
	*out = *in
	if in.AzureCredentialsSecretRef != nil {
		in, out := &in.AzureCredentialsSecretRef, &out.AzureCredentialsSecretRef
		*out = new(AzureCredentialsSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureSinkConfig.
func (in *AzureSinkConfig) DeepCopy() *AzureSinkConfig {
	if in == nil {
		return nil
	}
	out := new(AzureSinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackblazeCredentialsSecretRef) DeepCopyInto(out *BackblazeCredentialsSecretRef) {
	*out = *in
	out.Mapping = in.Mapping
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackblazeCredentialsSecretRef.
func (in *BackblazeCredentialsSecretRef) DeepCopy() *BackblazeCredentialsSecretRef {
	if in == nil {
		return nil
	}
	out := new(BackblazeCredentialsSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackblazeCredentialsSecretRefMapping) DeepCopyInto(out *BackblazeCredentialsSecretRefMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackblazeCredentialsSecretRefMapping.
func (in *BackblazeCredentialsSecretRefMapping) DeepCopy() *BackblazeCredentialsSecretRefMapping {
	if in == nil {
		return nil
	}
	out := new(BackblazeCredentialsSecretRefMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackblazeSinkConfig) DeepCopyInto(out *BackblazeSinkConfig) {
	*out = *in
	if in.BackblazeCredentialsSecretRef != nil {
		in, out := &in.BackblazeCredentialsSecretRef, &out.BackblazeCredentialsSecretRef
		*out = new(BackblazeCredentialsSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackblazeSinkConfig.
func (in *BackblazeSinkConfig) DeepCopy() *BackblazeSinkConfig {
	if in == nil {
		return nil
	}
	out := new(BackblazeSinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketClaim) DeepCopyInto(out *BucketClaim) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketClaim.
func (in *BucketClaim) DeepCopy() *BucketClaim {
	if in == nil {
		return nil
	}
	out := new(BucketClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketClaim) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketClaimList) DeepCopyInto(out *BucketClaimList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BucketClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketClaimList.
func (in *BucketClaimList) DeepCopy() *BucketClaimList {
	if in == nil {
		return nil
	}
	out := new(BucketClaimList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BucketClaimList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketClaimSpec) DeepCopyInto(out *BucketClaimSpec) {
	*out = *in
	out.Quota = in.Quota
	out.ObjectLock = in.ObjectLock
	out.ClusterRef = in.ClusterRef
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(BucketSecretSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketClaimSpec.
func (in *BucketClaimSpec) DeepCopy() *BucketClaimSpec {
	if in == nil {
		return nil
	}
	out := new(BucketClaimSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketClaimStatus) DeepCopyInto(out *BucketClaimStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BucketInfo != nil {
		in, out := &in.BucketInfo, &out.BucketInfo
		*out = new(BucketInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretInfo != nil {
		in, out := &in.SecretInfo, &out.SecretInfo
		*out = new(BucketSecretInfo)
		**out = **in
	}
	if in.LastUpdateTime != nil {
		in, out := &in.LastUpdateTime, &out.LastUpdateTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketClaimStatus.
func (in *BucketClaimStatus) DeepCopy() *BucketClaimStatus {
	if in == nil {
		return nil
	}
	out := new(BucketClaimStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketInfo) DeepCopyInto(out *BucketInfo) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketInfo.
func (in *BucketInfo) DeepCopy() *BucketInfo {
	if in == nil {
		return nil
	}
	out := new(BucketInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketObjectLock) DeepCopyInto(out *BucketObjectLock) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketObjectLock.
func (in *BucketObjectLock) DeepCopy() *BucketObjectLock {
	if in == nil {
		return nil
	}
	out := new(BucketObjectLock)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketQuota) DeepCopyInto(out *BucketQuota) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketQuota.
func (in *BucketQuota) DeepCopy() *BucketQuota {
	if in == nil {
		return nil
	}
	out := new(BucketQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketSecretInfo) DeepCopyInto(out *BucketSecretInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketSecretInfo.
func (in *BucketSecretInfo) DeepCopy() *BucketSecretInfo {
	if in == nil {
		return nil
	}
	out := new(BucketSecretInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BucketSecretSpec) DeepCopyInto(out *BucketSecretSpec) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BucketSecretSpec.
func (in *BucketSecretSpec) DeepCopy() *BucketSecretSpec {
	if in == nil {
		return nil
	}
	out := new(BucketSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterReference) DeepCopyInto(out *ClusterReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterReference.
func (in *ClusterReference) DeepCopy() *ClusterReference {
	if in == nil {
		return nil
	}
	out := new(ClusterReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(corev1.PullPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]corev1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.SchedulerName != nil {
		in, out := &in.SchedulerName, &out.SchedulerName
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilerBackupSpec) DeepCopyInto(out *FilerBackupSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(PersistenceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxMB != nil {
		in, out := &in.MaxMB, &out.MaxMB
		*out = new(int32)
		**out = **in
	}
	if in.Sink != nil {
		in, out := &in.Sink, &out.Sink
		*out = new(SinkConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilerBackupSpec.
func (in *FilerBackupSpec) DeepCopy() *FilerBackupSpec {
	if in == nil {
		return nil
	}
	out := new(FilerBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilerSinkConfig) DeepCopyInto(out *FilerSinkConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilerSinkConfig.
func (in *FilerSinkConfig) DeepCopy() *FilerSinkConfig {
	if in == nil {
		return nil
	}
	out := new(FilerSinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilerSpec) DeepCopyInto(out *FilerSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int32)
		**out = **in
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(PersistenceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxMB != nil {
		in, out := &in.MaxMB, &out.MaxMB
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilerSpec.
func (in *FilerSpec) DeepCopy() *FilerSpec {
	if in == nil {
		return nil
	}
	out := new(FilerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCloudStorageCredentialsSecretRef) DeepCopyInto(out *GoogleCloudStorageCredentialsSecretRef) {
	*out = *in
	out.Mapping = in.Mapping
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCloudStorageCredentialsSecretRef.
func (in *GoogleCloudStorageCredentialsSecretRef) DeepCopy() *GoogleCloudStorageCredentialsSecretRef {
	if in == nil {
		return nil
	}
	out := new(GoogleCloudStorageCredentialsSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCloudStorageCredentialsSecretRefMapping) DeepCopyInto(out *GoogleCloudStorageCredentialsSecretRefMapping) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCloudStorageCredentialsSecretRefMapping.
func (in *GoogleCloudStorageCredentialsSecretRefMapping) DeepCopy() *GoogleCloudStorageCredentialsSecretRefMapping {
	if in == nil {
		return nil
	}
	out := new(GoogleCloudStorageCredentialsSecretRefMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleCloudStorageSinkConfig) DeepCopyInto(out *GoogleCloudStorageSinkConfig) {
	*out = *in
	if in.GoogleCloudStorageCredentialsSecretRef != nil {
		in, out := &in.GoogleCloudStorageCredentialsSecretRef, &out.GoogleCloudStorageCredentialsSecretRef
		*out = new(GoogleCloudStorageCredentialsSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleCloudStorageSinkConfig.
func (in *GoogleCloudStorageSinkConfig) DeepCopy() *GoogleCloudStorageSinkConfig {
	if in == nil {
		return nil
	}
	out := new(GoogleCloudStorageSinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSinkConfig) DeepCopyInto(out *LocalSinkConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSinkConfig.
func (in *LocalSinkConfig) DeepCopy() *LocalSinkConfig {
	if in == nil {
		return nil
	}
	out := new(LocalSinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterSpec) DeepCopyInto(out *MasterSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int32)
		**out = **in
	}
	if in.VolumePreallocate != nil {
		in, out := &in.VolumePreallocate, &out.VolumePreallocate
		*out = new(bool)
		**out = **in
	}
	if in.VolumeSizeLimitMB != nil {
		in, out := &in.VolumeSizeLimitMB, &out.VolumeSizeLimitMB
		*out = new(int32)
		**out = **in
	}
	if in.GarbageThreshold != nil {
		in, out := &in.GarbageThreshold, &out.GarbageThreshold
		*out = new(string)
		**out = **in
	}
	if in.PulseSeconds != nil {
		in, out := &in.PulseSeconds, &out.PulseSeconds
		*out = new(int32)
		**out = **in
	}
	if in.DefaultReplication != nil {
		in, out := &in.DefaultReplication, &out.DefaultReplication
		*out = new(string)
		**out = **in
	}
	if in.ConcurrentStart != nil {
		in, out := &in.ConcurrentStart, &out.ConcurrentStart
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterSpec.
func (in *MasterSpec) DeepCopy() *MasterSpec {
	if in == nil {
		return nil
	}
	out := new(MasterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsSpec) DeepCopyInto(out *MetricsSpec) {
	*out = *in
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsSpec.
func (in *MetricsSpec) DeepCopy() *MetricsSpec {
	if in == nil {
		return nil
	}
	out := new(MetricsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistenceSpec) DeepCopyInto(out *PersistenceSpec) {
	*out = *in
	if in.ExistingClaim != nil {
		in, out := &in.ExistingClaim, &out.ExistingClaim
		*out = new(string)
		**out = **in
	}
	if in.MountPath != nil {
		in, out := &in.MountPath, &out.MountPath
		*out = new(string)
		**out = **in
	}
	if in.SubPath != nil {
		in, out := &in.SubPath, &out.SubPath
		*out = new(string)
		**out = **in
	}
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]corev1.PersistentVolumeAccessMode, len(*in))
		copy(*out, *in)
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.VolumeMode != nil {
		in, out := &in.VolumeMode, &out.VolumeMode
		*out = new(corev1.PersistentVolumeMode)
		**out = **in
	}
	if in.DataSource != nil {
		in, out := &in.DataSource, &out.DataSource
		*out = new(corev1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistenceSpec.
func (in *PersistenceSpec) DeepCopy() *PersistenceSpec {
	if in == nil {
		return nil
	}
	out := new(PersistenceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3SinkConfig) DeepCopyInto(out *S3SinkConfig) {
	*out = *in
	if in.AWSCredentialsSecretRef != nil {
		in, out := &in.AWSCredentialsSecretRef, &out.AWSCredentialsSecretRef
		*out = new(AWSCredentialsSecretRef)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3SinkConfig.
func (in *S3SinkConfig) DeepCopy() *S3SinkConfig {
	if in == nil {
		return nil
	}
	out := new(S3SinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Seaweed) DeepCopyInto(out *Seaweed) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Seaweed.
func (in *Seaweed) DeepCopy() *Seaweed {
	if in == nil {
		return nil
	}
	out := new(Seaweed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Seaweed) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeaweedList) DeepCopyInto(out *SeaweedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Seaweed, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeaweedList.
func (in *SeaweedList) DeepCopy() *SeaweedList {
	if in == nil {
		return nil
	}
	out := new(SeaweedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SeaweedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeaweedSpec) DeepCopyInto(out *SeaweedSpec) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = new(MetricsSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Master != nil {
		in, out := &in.Master, &out.Master
		*out = new(MasterSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = new(VolumeSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Filer != nil {
		in, out := &in.Filer, &out.Filer
		*out = new(FilerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.FilerBackup != nil {
		in, out := &in.FilerBackup, &out.FilerBackup
		*out = new(FilerBackupSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(AdminSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PVReclaimPolicy != nil {
		in, out := &in.PVReclaimPolicy, &out.PVReclaimPolicy
		*out = new(corev1.PersistentVolumeReclaimPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]corev1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.EnablePVReclaim != nil {
		in, out := &in.EnablePVReclaim, &out.EnablePVReclaim
		*out = new(bool)
		**out = **in
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(StorageSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.HostSuffix != nil {
		in, out := &in.HostSuffix, &out.HostSuffix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeaweedSpec.
func (in *SeaweedSpec) DeepCopy() *SeaweedSpec {
	if in == nil {
		return nil
	}
	out := new(SeaweedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SeaweedStatus) DeepCopyInto(out *SeaweedStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SeaweedStatus.
func (in *SeaweedStatus) DeepCopy() *SeaweedStatus {
	if in == nil {
		return nil
	}
	out := new(SeaweedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoadBalancerIP != nil {
		in, out := &in.LoadBalancerIP, &out.LoadBalancerIP
		*out = new(string)
		**out = **in
	}
	if in.ClusterIP != nil {
		in, out := &in.ClusterIP, &out.ClusterIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SinkConfig) DeepCopyInto(out *SinkConfig) {
	*out = *in
	if in.Local != nil {
		in, out := &in.Local, &out.Local
		*out = new(LocalSinkConfig)
		**out = **in
	}
	if in.Filer != nil {
		in, out := &in.Filer, &out.Filer
		*out = new(FilerSinkConfig)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3SinkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.GoogleCloudStorage != nil {
		in, out := &in.GoogleCloudStorage, &out.GoogleCloudStorage
		*out = new(GoogleCloudStorageSinkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = new(AzureSinkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Backblaze != nil {
		in, out := &in.Backblaze, &out.Backblaze
		*out = new(BackblazeSinkConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SinkConfig.
func (in *SinkConfig) DeepCopy() *SinkConfig {
	if in == nil {
		return nil
	}
	out := new(SinkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSpec) DeepCopyInto(out *StorageSpec) {
	*out = *in
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSpec.
func (in *StorageSpec) DeepCopy() *StorageSpec {
	if in == nil {
		return nil
	}
	out := new(StorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSpec) DeepCopyInto(out *VolumeSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int32)
		**out = **in
	}
	if in.CompactionMBps != nil {
		in, out := &in.CompactionMBps, &out.CompactionMBps
		*out = new(int32)
		**out = **in
	}
	if in.FileSizeLimitMB != nil {
		in, out := &in.FileSizeLimitMB, &out.FileSizeLimitMB
		*out = new(int32)
		**out = **in
	}
	if in.FixJpgOrientation != nil {
		in, out := &in.FixJpgOrientation, &out.FixJpgOrientation
		*out = new(bool)
		**out = **in
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(int32)
		**out = **in
	}
	if in.MaxVolumeCounts != nil {
		in, out := &in.MaxVolumeCounts, &out.MaxVolumeCounts
		*out = new(int32)
		**out = **in
	}
	if in.MinFreeSpacePercent != nil {
		in, out := &in.MinFreeSpacePercent, &out.MinFreeSpacePercent
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSpec.
func (in *VolumeSpec) DeepCopy() *VolumeSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeSpec)
	in.DeepCopyInto(out)
	return out
}
